// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using AppointMed.API.Models;

namespace AppointMed.API.Data
{
    public partial class AppointmedContext : DbContext
    {
        public AppointmedContext()
        {
        }

        public AppointmedContext(DbContextOptions<AppointmedContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Address> Address { get; set; }
        public virtual DbSet<Appointment> Appointment { get; set; }
        public virtual DbSet<AppointmentStatus> AppointmentStatus { get; set; }
        public virtual DbSet<Clinic> Clinic { get; set; }
        public virtual DbSet<ClinicType> ClinicType { get; set; }
        public virtual DbSet<Department> Department { get; set; }
        public virtual DbSet<Doctor> Doctor { get; set; }
        public virtual DbSet<Patient> Patient { get; set; }
        public virtual DbSet<PhoneNumber> PhoneNumber { get; set; }

        //protected override void OnModelCreating(ModelBuilder modelBuilder)
        //{
        //    modelBuilder.Entity<Address>(entity =>
        //    {
        //        entity.ToTable("address");

        //        entity.Property(e => e.Id).HasColumnName("id");

        //        entity.Property(e => e.City)
        //            .IsRequired()
        //            .HasMaxLength(50)
        //            .HasColumnName("city");

        //        entity.Property(e => e.District)
        //            .IsRequired()
        //            .HasMaxLength(50)
        //            .HasColumnName("district");

        //        entity.Property(e => e.Region)
        //            .IsRequired()
        //            .HasMaxLength(50)
        //            .HasColumnName("region");

        //        entity.Property(e => e.Street)
        //            .IsRequired()
        //            .HasMaxLength(50)
        //            .HasColumnName("street");
        //    });

        //    modelBuilder.Entity<Appointment>(entity =>
        //    {
        //        entity.ToTable("appointment");

        //        entity.Property(e => e.Id).HasColumnName("id");

        //        entity.Property(e => e.Clinic).HasColumnName("clinic");

        //        entity.Property(e => e.Date)
        //            .HasColumnType("date")
        //            .HasColumnName("date");

        //        entity.Property(e => e.Doctor).HasColumnName("doctor");

        //        entity.Property(e => e.EndTime).HasColumnName("end_time");

        //        entity.Property(e => e.Patient).HasColumnName("patient");

        //        entity.Property(e => e.StartTime).HasColumnName("start_time");

        //        entity.Property(e => e.Status).HasColumnName("status");

        //        entity.HasOne(d => d.ClinicNavigation)
        //            .WithMany(p => p.Appointment)
        //            .HasForeignKey(d => d.Clinic)
        //            .OnDelete(DeleteBehavior.ClientSetNull)
        //            .HasConstraintName("FK__appointme__clini__1DB06A4F");

        //        entity.HasOne(d => d.DoctorNavigation)
        //            .WithMany(p => p.Appointment)
        //            .HasForeignKey(d => d.Doctor)
        //            .OnDelete(DeleteBehavior.ClientSetNull)
        //            .HasConstraintName("FK__appointme__docto__1EA48E88");

        //        entity.HasOne(d => d.PatientNavigation)
        //            .WithMany(p => p.Appointment)
        //            .HasForeignKey(d => d.Patient)
        //            .OnDelete(DeleteBehavior.ClientSetNull)
        //            .HasConstraintName("FK__appointme__patie__1F98B2C1");

        //        entity.HasOne(d => d.StatusNavigation)
        //            .WithMany(p => p.Appointment)
        //            .HasForeignKey(d => d.Status)
        //            .OnDelete(DeleteBehavior.ClientSetNull)
        //            .HasConstraintName("FK__appointme__statu__208CD6FA");
        //    });

        //    modelBuilder.Entity<AppointmentStatus>(entity =>
        //    {
        //        entity.ToTable("appointment_status");

        //        entity.Property(e => e.Id).HasColumnName("id");

        //        entity.Property(e => e.Name)
        //            .IsRequired()
        //            .HasMaxLength(50)
        //            .HasColumnName("name");
        //    });

        //    modelBuilder.Entity<Clinic>(entity =>
        //    {
        //        entity.ToTable("clinic");

        //        entity.Property(e => e.Id).HasColumnName("id");

        //        entity.Property(e => e.Address).HasColumnName("address");

        //        entity.Property(e => e.Description)
        //            .HasMaxLength(300)
        //            .HasColumnName("description");

        //        entity.Property(e => e.Image).HasColumnName("image");

        //        entity.Property(e => e.Name)
        //            .IsRequired()
        //            .HasMaxLength(50)
        //            .HasColumnName("name");

        //        entity.Property(e => e.PhoneNumber).HasColumnName("phone_number");

        //        entity.Property(e => e.Type).HasColumnName("type");

        //        entity.HasOne(d => d.AddressNavigation)
        //            .WithMany(p => p.Clinic)
        //            .HasForeignKey(d => d.Address)
        //            .OnDelete(DeleteBehavior.ClientSetNull)
        //            .HasConstraintName("FK__clinic__address__0A9D95DB");

        //        entity.HasOne(d => d.PhoneNumberNavigation)
        //            .WithMany(p => p.Clinic)
        //            .HasForeignKey(d => d.PhoneNumber)
        //            .OnDelete(DeleteBehavior.ClientSetNull)
        //            .HasConstraintName("FK__clinic__phone_nu__0B91BA14");

        //        entity.HasOne(d => d.TypeNavigation)
        //            .WithMany(p => p.Clinic)
        //            .HasForeignKey(d => d.Type)
        //            .OnDelete(DeleteBehavior.ClientSetNull)
        //            .HasConstraintName("FK__clinic__type__0C85DE4D");

        //        entity.HasMany(d => d.Department)
        //            .WithMany(p => p.Clinic)
        //            .UsingEntity<Dictionary<string, object>>(
        //                "ClinicDepartmentJunction",
        //                l => l.HasOne<Department>().WithMany().HasForeignKey("Department").OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK__clinic_de__depar__0F624AF8"),
        //                r => r.HasOne<Clinic>().WithMany().HasForeignKey("Clinic").OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK__clinic_de__clini__0E6E26BF"),
        //                j =>
        //                {
        //                    j.HasKey("Clinic", "Department").HasName("pk_clinic_department");

        //                    j.ToTable("clinic_department_junction");

        //                    j.IndexerProperty<int>("Clinic").HasColumnName("clinic");

        //                    j.IndexerProperty<int>("Department").HasColumnName("department");
        //                });
        //    });

        //    modelBuilder.Entity<ClinicType>(entity =>
        //    {
        //        entity.ToTable("clinic_type");

        //        entity.Property(e => e.Id).HasColumnName("id");

        //        entity.Property(e => e.Name)
        //            .IsRequired()
        //            .HasMaxLength(50)
        //            .HasColumnName("name");
        //    });

        //    modelBuilder.Entity<Department>(entity =>
        //    {
        //        entity.ToTable("department");

        //        entity.Property(e => e.Id).HasColumnName("id");

        //        entity.Property(e => e.Name)
        //            .IsRequired()
        //            .HasMaxLength(50)
        //            .HasColumnName("name");
        //    });

        //    modelBuilder.Entity<Doctor>(entity =>
        //    {
        //        entity.ToTable("doctor");

        //        entity.Property(e => e.Id).HasColumnName("id");

        //        entity.Property(e => e.Address).HasColumnName("address");

        //        entity.Property(e => e.Clinic).HasColumnName("clinic");

        //        entity.Property(e => e.Department).HasColumnName("department");

        //        entity.Property(e => e.Dob)
        //            .HasColumnType("date")
        //            .HasColumnName("dob");

        //        entity.Property(e => e.Email)
        //            .IsRequired()
        //            .HasMaxLength(50)
        //            .HasColumnName("email");

        //        entity.Property(e => e.FirstName)
        //            .IsRequired()
        //            .HasMaxLength(50)
        //            .IsUnicode(false)
        //            .HasColumnName("first_name");

        //        entity.Property(e => e.LastName)
        //            .IsRequired()
        //            .HasMaxLength(50)
        //            .IsUnicode(false)
        //            .HasColumnName("last_name");

        //        entity.Property(e => e.PassportNumber)
        //            .IsRequired()
        //            .HasMaxLength(9)
        //            .IsUnicode(false)
        //            .HasColumnName("passport_number");

        //        entity.Property(e => e.PhoneNumber).HasColumnName("phone_number");

        //        entity.HasOne(d => d.AddressNavigation)
        //            .WithMany(p => p.Doctor)
        //            .HasForeignKey(d => d.Address)
        //            .OnDelete(DeleteBehavior.ClientSetNull)
        //            .HasConstraintName("FK__doctor__address__123EB7A3");

        //        entity.HasOne(d => d.ClinicNavigation)
        //            .WithMany(p => p.Doctor)
        //            .HasForeignKey(d => d.Clinic)
        //            .OnDelete(DeleteBehavior.ClientSetNull)
        //            .HasConstraintName("FK__doctor__clinic__14270015");

        //        entity.HasOne(d => d.DepartmentNavigation)
        //            .WithMany(p => p.Doctor)
        //            .HasForeignKey(d => d.Department)
        //            .OnDelete(DeleteBehavior.ClientSetNull)
        //            .HasConstraintName("FK__doctor__departme__151B244E");

        //        entity.HasOne(d => d.PhoneNumberNavigation)
        //            .WithMany(p => p.Doctor)
        //            .HasForeignKey(d => d.PhoneNumber)
        //            .OnDelete(DeleteBehavior.ClientSetNull)
        //            .HasConstraintName("FK__doctor__phone_nu__1332DBDC");
        //    });

        //    modelBuilder.Entity<Patient>(entity =>
        //    {
        //        entity.ToTable("patient");

        //        entity.Property(e => e.Id).HasColumnName("id");

        //        entity.Property(e => e.Address).HasColumnName("address");

        //        entity.Property(e => e.Dob)
        //            .HasColumnType("date")
        //            .HasColumnName("dob");

        //        entity.Property(e => e.Email)
        //            .IsRequired()
        //            .HasMaxLength(50)
        //            .HasColumnName("email");

        //        entity.Property(e => e.FirstName)
        //            .IsRequired()
        //            .HasMaxLength(50)
        //            .IsUnicode(false)
        //            .HasColumnName("first_name");

        //        entity.Property(e => e.LastName)
        //            .IsRequired()
        //            .HasMaxLength(50)
        //            .IsUnicode(false)
        //            .HasColumnName("last_name");

        //        entity.Property(e => e.PassportNumber)
        //            .IsRequired()
        //            .HasMaxLength(9)
        //            .IsUnicode(false)
        //            .HasColumnName("passport_number");

        //        entity.Property(e => e.PhoneNumber).HasColumnName("phone_number");

        //        entity.HasOne(d => d.AddressNavigation)
        //            .WithMany(p => p.Patient)
        //            .HasForeignKey(d => d.Address)
        //            .OnDelete(DeleteBehavior.ClientSetNull)
        //            .HasConstraintName("FK__patient__address__17F790F9");

        //        entity.HasOne(d => d.PhoneNumberNavigation)
        //            .WithMany(p => p.Patient)
        //            .HasForeignKey(d => d.PhoneNumber)
        //            .OnDelete(DeleteBehavior.ClientSetNull)
        //            .HasConstraintName("FK__patient__phone_n__18EBB532");
        //    });

        //    modelBuilder.Entity<PhoneNumber>(entity =>
        //    {
        //        entity.ToTable("phone_number");

        //        entity.Property(e => e.Id).HasColumnName("id");

        //        entity.Property(e => e.PrimaryNumber)
        //            .IsRequired()
        //            .HasMaxLength(13)
        //            .HasColumnName("primary_number");

        //        entity.Property(e => e.SecondaryNumber)
        //            .HasMaxLength(13)
        //            .HasColumnName("secondary_number");
        //    });

        //    OnModelCreatingPartial(modelBuilder);
        //}

        //partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}